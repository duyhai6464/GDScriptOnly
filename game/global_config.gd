extends Control

enum GameMode {NORMAL, BOUNTY_HUNTER , SURVIVAL}
enum TypeMoney {GOLD, DIAMOND, ADS=6, CASH=9}
enum TypeItem {SKIN_EYE, SKIN_EXPLODE, SKIN_ZONE, MONEY_BOX=9, TRADE_BOX=10}
#932474324567: 'key'
const Color_set: Dictionary = {
	0: Color("d5c699"),
	1: Color("f6abb6"),
	2: Color("03396c"),
	3: Color("2ab7ca"),
	4: Color("fed766"),
	5: Color("ffa700"),
	6: Color("009688"),
	7: Color("a0d2eb"),
	8: Color("ff8981"),
	9: Color("d62d20"),
	10: Color("851e3e"),
	11: Color("7f4f24"),
	12: Color("6a994e"),
	13: Color("2196f3"),
	14: Color("673ab7"),
	15: Color("6a0572"),
}
const Color_names: Dictionary = {
	0: "gray",
	1: "AmaranthPink",
	2: "AteneoBlue",
	3: "Bluegreen",
	4: "Crayola",
	5: "ChromeYellow",
	6: "DarkCyan",
	7: "Iceblue",
	8: "TartOrange",
	9: "Vermilion",
	10: "Violet-Red",
	11: "Maroon",
	12: "Olive-Green",
	13: "Navy-Blue",
	14: "Deep-Purple",
	15: "Dark-Purple",
}
const Time_per_game: Dictionary = {
	GameMode.BOUNTY_HUNTER: 300,
	GameMode.SURVIVAL: 300,
	GameMode.NORMAL: INF,
}
const bot_names: Array[String] = [
	'Lam Ngọc',
	'Thúy Vi',
	'Lệ Thanh',
	'Tố Quyên',
	'Linh Lan',
	'Mộng Thy',
	'An Nhiên',
	'Tố Loan',
	'Huệ Lan',
	'Hồng Hà',
	'Thanh Giang',
	'Thanh Trang',
	'Hương Xuân',
	'Quế Anh',
	'Thạch Thảo',
	'Thu Nhiên',
	'Ngọc Quỳnh',
	'Thu Ngọc',
	'Mộng Thy',
	'Nghi Xuân',
	'Gia Nhi',
	'Tường Vân',
	'Tâm Nguyệt',
	'Phương Quân',
	'Quỳnh Dao',
	'Thúy Huyền',
	'Ánh Hồng',
	'Kim Thu',
	'Ngọc Phụng',
	'Thúy My',
	'Thanh Ngọc',
	'Diệu Hương',
	'Hương Tiên',
	'Hồng Hoa',
	'Ái Nhi',
	'Thúy Mai',
	'Như Loan',
	'Thục Ðoan',
	'Yến Anh',
	'Hải Nhi',
	'Thiên Tuyền',
	'Trang Nhã',
	'Khả Tú',
	'Phi Nhung',
	'Như Hồng',
	'Linh Chi',
	'Kim Anh',
	'Phương Quế',
	'Diệu Ái',
	'Ngân Hà',
	'Kiều Nga',
	'Trang Linh',
	'Sương Sương',
	'Mộng Hương',
	'Uyên Trâm',
	'Mỹ Uyên',
	'Khánh Quỳnh',
	'Bảo Lan',
	'Xuân Trang',
	'Thiên Tuyền',
	'Huyền Trân',
	'Ðông Nghi',
	'Như Thảo',
	'Ánh Ngọc',
	'Vân Trang',
	'Phương Quế',
	'Trang Ðài',
	'Ngọc Khuê',
	'Thanh Hoa',
	'Ngọc Tuyết',
	'Suopuok',
	'Koreah',
	'Probonado',
	'Pekanrinda',
	'Saloh',
	'Muhad',
	'Khadaung',
	'Shawpang',
	'Navoledo',
	'Himagum',
	'Nakhon Ratriram',
	'Nakhon Paburi',
	'Yên Tàu',
	'Ðông Pha',
	'Tam Mau',
	'Phu Ðinh',
	'Tuy Binh',
	'Phu An',
	'Kon Binh',
	'Bac Xuyên',
	'Suncho',
	'Pumkin',
	'Mayze',
	'Dicchio',
	'Turrip',
	'Escaro',
	'Shalot',
	'Kohlra',
	'Ruccollo',
	'Lemogra',
	'Sanow',
	'Arctico',
	'Ice',
	'Wintera',
	'Odacova',
	'Papaya',
	'Strawber',
	'Lime',
	'Lychee',
	'Cherry',
	'Salira',
	'Vessa',
	'Fasa',
	'Werra',
	'Wirra',
	'Rose',
	'Nicole',
	'Willow',
	'Eleanor',
	'Keira',
	'Valma',
	'Nare',
	'Ghanne',
	'Virne',
	'Himne',
	'Jasmine',
	'Yasmin',
	'Lauren',
	'Rose',
	'Lexie',
	'Yrieth Leafclouds',
	'Irea Mistcaller',
	'Amaedan Skyspyre',
	'Fylodren Staggazer',
	'Saeleas Trueclouds',
	'Teladreas Farcaller',
	'Melirandiir Lunacrest',
	'Tuminon Starspear',
	'Ballaar Darkspyre',
	'Marren Ravenrage',
	'Thylora Rainbreeze',
	'Hecina Shadowmight',
	'Fareath Ravenstriker',
	'Mylaercia Stormeye',
	'Galyssa Dawnshade',
	'Yaetia Greenfeather',
	'Faelyrai Dawnheart',
	'Cayya Stonedew',
	'Keyteran Thunderfire',
	'Seltia Fargrove',
	'Georgia Sinnett',
	'Serena Milbourne',
	'Rosemary Lamonia',
	'Maude Peirce',
	'Scarlett Atkins',
	'Eleanor Dixon',
	'Claudia Federline',
	'Eugenie Whitehall',
	'Miriam Ryder',
	'Natalia Brimsey',
	'Inquisitor',
	'Navigator',
	'Dragon Knight',
	'Weaver',
	'Battlemage',
	'Soulknife',
	'Dragonfire Adept',
	'Battlemage',
	'Harbinger',
	'Demonologist',
	'Viking',
	'Archmage',
	'Archer',
	'Sunlord',
	'Warpriest',
	'Tempest',
	'Demonbinder',
	'Bladesinger',
	'Spellsinger',
	'Marine',
	'Corrupted Paragon',
	'Blood Knight',
	'Shadowcraft Tempest',
	'Shadowcraft Adept',
	'Corsair',
	'Septic Templar',
	'Armored Spymaster',
	'Demonic Sentinel',
	'Shadow Spy',
	'Rotten Vampire',
	'Thasitta',
	'Cifrendra Taddigg',
	'Ilenthe Iallo',
	'Fivalli Of Cintra',
	'Nassodre Tors',
	'Vanalli',
	'Haffa',
	'Vivre',
	'Pessiri',
	'Vavre',
	'Piphonna',
	'Vanontha Tollald',
	'Selenni Dogg',
	'Rinanna Diselt',
	'Phiffone Dosa',
	'Azere',
	'Chacaldre Of Sodden',
	'Ivelde',
	'Thivrona Of Brugge',
	'Vareni',
	'Mysti',
	'Jade',
	'Onyxia',
	'Lotus',
	'Avril',
	'Codex',
	'Scarlet',
	'Heaven',
	'Aura',
	'Winter',
	'Amber',
	'Dash',
	'Dharma',
	'Phoenix',
	'Zelda',
	'Blitzen',
	'Xena',
	'Aura',
	'Aurora',
	'Luna',
]
const enemy_talk: Array[String] = [
	'_enemy_talk_1_',
	'_enemy_talk_2_',
	'_enemy_talk_3_',
	'_enemy_talk_4_',
	'_enemy_talk_5_',
	'_enemy_talk_6_',
	'_enemy_talk_7_',
	'_enemy_talk_8_',
	'_enemy_talk_9_',
	'_enemy_talk_10_',
	'_enemy_talk_11_',
	'_enemy_talk_12_',
	'_enemy_talk_13_',
	'_enemy_talk_14_',
	'_enemy_talk_15_',
	'_enemy_talk_16_',
	'_enemy_talk_17_',
	'_enemy_talk_18_',
	'_enemy_talk_19_',
	'_enemy_talk_20_',
]
const enemy_talk_myself: Array[String] = [
	'_enemy_talk_myself_1_',
	'_enemy_talk_myself_2_',
	'_enemy_talk_myself_3_',
	'_enemy_talk_myself_4_',
	'_enemy_talk_myself_5_',
	'_enemy_talk_myself_6_',
	'_enemy_talk_myself_7_',
	'_enemy_talk_myself_8_',
	'_enemy_talk_myself_9_',
	'_enemy_talk_myself_10_',
	'_enemy_talk_myself_11_',
	'_enemy_talk_myself_12_',
	'_enemy_talk_myself_13_',
	'_enemy_talk_myself_14_',
	'_enemy_talk_myself_15_',
	'_enemy_talk_myself_16_',
	'_enemy_talk_myself_17_',
	'_enemy_talk_myself_18_',
	'_enemy_talk_myself_19_',
	'_enemy_talk_myself_20_',
]
const game_talk: Array[String] = [
	'_game_talk_1_',
	'_game_talk_2_',
	'_game_talk_3_',
	'_game_talk_4_',
	'_game_talk_5_',
	'_game_talk_6_',
	'_game_talk_7_',
	'_game_talk_8_',
	'_game_talk_9_',
	'_game_talk_10_',
]
const game_talk_myself: Array[String] = [
	'_game_talk_myself_1_',
	'_game_talk_myself_2_',
	'_game_talk_myself_3_',
	'_game_talk_myself_4_',
	'_game_talk_myself_5_',
	'_game_talk_myself_6_',
	'_game_talk_myself_7_',
	'_game_talk_myself_8_',
	'_game_talk_myself_9_',
	'_game_talk_myself_10_',
]
var current_game_mode : GameMode

var savedgame: SavedGame = SavedGame.load_or_create() as SavedGame

const eye_skins: Dictionary = {
	0: preload("res://player/eyes/eye_default.tres"),
	1: preload("res://player/eyes/eye_1.tres"),
	2: preload("res://player/eyes/eye_2.tres"),
	3: preload("res://player/eyes/eye_3.tres"),
	4: preload("res://player/eyes/eye_beauty.tres"),
	5: preload("res://player/eyes/eye_beauty_1.tres"),
	6: preload("res://player/eyes/eye_bionic.tres"),
	7: preload("res://player/eyes/eye_bionic_1.tres"),
	8: preload("res://player/eyes/eye_decision.tres"),
	9: preload("res://player/eyes/eye_electric.tres"),
	10: preload("res://player/eyes/eye_illuminati.tres"),
	11: preload("res://player/eyes/eye_scan.tres"),
	12: preload("res://player/eyes/eye_scan_1.tres"),
	13: preload("res://player/eyes/eye_money.tres"),
	14: preload("res://player/eyes/eye_spy.tres"),
	15: preload("res://player/eyes/eye_star.tres")
}
var ItemProp: Dictionary = data_item_dict_prop.get_dict()

@onready var confirm_quit: QuitConfirm = $ConfirmQuit

func _ready():
	TranslationServer.set_locale(savedgame.lang)

func _notification(what):
	if OS.get_name() == 'Android':
		if what == Window.NOTIFICATION_WM_GO_BACK_REQUEST:
			if confirm_quit.is_show:
				confirm_quit._on_popup_confirm_ok()
			confirm_quit.show_dialog.emit()
			savedgame.save()
	if what == Window.NOTIFICATION_WM_CLOSE_REQUEST:
		if confirm_quit.is_show:
			confirm_quit._on_popup_confirm_ok()
		confirm_quit.show_dialog.emit()
		savedgame.save()

func _physics_process(delta: float) -> void:
	savedgame.stat_time += delta
	savedgame.time_refresh = clamp(savedgame.time_refresh - delta, 0, 3600)
